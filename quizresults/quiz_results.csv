20,7,13,0,35.0,7,20,"[{'question': 'What is the output of the following code?\n```python\nclass A:\n    def __init__(self):\n        self.x = 1\n\nclass B(A):\n    def __init__(self):\n        super().__init__()\n        self.y = 2\n\na = A()\nb = B()\nprint(a.x, b.x, b.y)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 // 3.0)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 == 50.0)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(""50"" + ""50"")?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 % 50)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass J:\n    def __init__(self, x):\n        self.x = x\n\n    def __contains__(self, item):\n        return item in self.x\n\nj = J([1, 2, 3])\nprint(1 in j)\nprint(4 in j)\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\ndef fibonacci(n):\n    if n <= 0:\n        return ""Invalid input""\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        a, b = 0, 1\n        for _ in range(n - 2):\n            a, b = b, a + b\n        return b\n\nprint(fibonacci(7))\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass W:\n    def __init__(self, x):\n        self.x = x\n\n    def __rshift__(self, other):\n        return self.x >> other.x\n\nw1 = W(5)\nw2 = W(3)\nw3 = 2\nprint(w1 >> w2)\nprint(w1 >> w3)\nprint(w3 >> w1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass F:\n    def __init__(self, x):\n        self.x = x\n\n    def __getitem__(self, index):\n        if index < len(self.x):\n            return self.x[index]\n        else:\n            raise IndexError\n\nf = F([1, 2, 3])\nprint(f[1])\nprint(f[3])\n```\nA) 2, Error\nB) 2, IndexError\nC) 1, Error\nD) 1, IndexError', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass S:\n    def __init__(self, x):\n        self.x = x\n\n    def __and__(self, other):\n        return self.x & other.x\n\ns1 = S(5)\ns2 = S(3)\ns3 = 2\nprint(s1 & s2)\nprint(s1 & s3)\nprint(s3 & s1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass O:\n    def __init__(self, x):\n        self.x = x\n\n    def __truediv__(self, other):\n        return self.x / other.x\n\no1 = O(6)\no2 = O(3)\no3 = 2\nprint(o1 / o2)\nprint(o1 / o3)\nprint(o3 / o1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the purpose of the `property()` decorator in Python?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass D:\n    def __init__(self, x):\n        self.x = x\n\n    def __eq__(self, other):\n        return self.x == other.x\n\nd1 = D(1)\nd2 = D(2)\nd3 = D(1)\nprint(d1 == d3)\nprint(d2 == d3)\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of print(50 ** 2.0)?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the purpose of the `async` and `await` keywords in Python?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': ""What is the output of the following code?\n```python\nimport contextlib\n\n@contextlib.contextmanager\ndef f():\n    print('Start')\n    yield\n    print('End')\n\nwith f():\n    print('Middle')\n```\n"", 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass N:\n    def __init__(self, x):\n        self.x = x\n\n    def __mul__(self, other):\n        return self.x * other.x\n\nn1 = N(2)\nn2 = N(3)\nn3 = 4\nprint(n1 * n2)\nprint(n1 * n3)\nprint(n3 * n1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass M:\n    def __init__(self, x):\n        self.x = x\n\n    def __sub__(self, other):\n        return self.x - other.x\n\nm1 = M(5)\nm2 = M(3)\nn = 2\nprint(m1 - m2)\nprint(m1 - n)\nprint(n - m1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass E:\n    def __init__(self, x):\n        self.x = x\n\n    def __iter__(self):\n        self.current = 0\n        return self\n\n    def __next__(self):\n        if self.current < self.x:\n            result = self.current\n            self.current += 1\n            return result\n        else:\n            raise StopIteration\n\ne = E(5)\nfor i in e:\n    print(i)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the difference between a list and a tuple in Python?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}]"
20,6,14,0,30.0,6,20,"[{'question': 'What is the output of the following code?\n```python\nclass N:\n    def __init__(self, x):\n        self.x = x\n\n    def __mul__(self, other):\n        return self.x * other.x\n\nn1 = N(2)\nn2 = N(3)\nn3 = 4\nprint(n1 * n2)\nprint(n1 * n3)\nprint(n3 * n1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 not in [10, 20, 30, 40, 50])?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass J:\n    def __init__(self, x):\n        self.x = x\n\n    def __contains__(self, item):\n        return item in self.x\n\nj = J([1, 2, 3])\nprint(1 in j)\nprint(4 in j)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 is 50.0)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass M:\n    def __init__(self, x):\n        self.x = x\n\n    def __sub__(self, other):\n        return self.x - other.x\n\nm1 = M(5)\nm2 = M(3)\nn = 2\nprint(m1 - m2)\nprint(m1 - n)\nprint(n - m1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass P:\n    def __init__(self, x):\n        self.x = x\n\n    def __floordiv__(self, other):\n        return self.x // other.x\n\np1 = P(5)\np2 = P(2)\np3 = 3\nprint(p1 // p2)\nprint(p1 // p3)\nprint(p3 // p1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass T:\n    def __init__(self, x):\n        self.x = x\n\n    def __or__(self, other):\n        return self.x | other.x\n\nt1 = T(5)\nt2 = T(3)\nt3 = 2\nprint(t1 | t2)\nprint(t1 | t3)\nprint(t3 | t1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\ndef f():\n    yield 1\n    yield 2\n    yield 3\n\ng = f()\nprint(next(g))\nprint(next(g))\nprint(next(g))\nprint(next(g))\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of print(50 / 50)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nasync def f():\n    await print(1)\n    await print(2)\n    await print(3)\n\ng = f()\ng.send(None)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass U:\n    def __init__(self, x):\n        self.x = x\n\n    def __xor__(self, other):\n        return self.x ^ other.x\n\nu1 = U(5)\nu2 = U(3)\nu3 = 2\nprint(u1 ^ u2)\nprint(u1 ^ u3)\nprint(u3 ^ u1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 % 50)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass O:\n    def __init__(self, x):\n        self.x = x\n\n    def __truediv__(self, other):\n        return self.x / other.x\n\no1 = O(6)\no2 = O(3)\no3 = 2\nprint(o1 / o2)\nprint(o1 / o3)\nprint(o3 / o1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': ""What is the output of the following code?\n```python\nwith open('file.txt') as f:\n    print(f.read())\n```\n"", 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass A:\n    def __init__(self):\n        self.x = 1\n\nclass B(A):\n    def __init__(self):\n        super().__init__()\n        self.y = 2\n\na = A()\nb = B()\nprint(a.x, b.x, b.y)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass H:\n    def __init__(self, x):\n        self.x = x\n\n    def __reversed__(self):\n        return self.x[::-1]\n\nh = H([1, 2, 3])\nprint(list(reversed(h)))\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass I:\n    def __init__(self, x):\n        self.x = x\n\n    def __missing__(self, key):\n        return ""Key not found""\n\ni = I({1: ""a"", 2: ""b""})\nprint(i[1])\nprint(i[3])\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass K:\n    def __init__(self, x):\n        self.x = x\n\n    def __call__(self, other):\n        return self.x * other.x\n\nk1 = K(2)\nk2 = K(3)\nprint(k1(k2))\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nimport functools\n\n@functools.lru_cache()\ndef f(x):\n    return x * x\n\nprint(f(1))\nprint(f(2))\nprint(f.cache_info())\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of print(50 != 50.0)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}]"
20,10,10,0,50.0,10,20,"[{'question': 'What is the output of the following code?\n```python\nclass M:\n    def __init__(self, x):\n        self.x = x\n\n    def __sub__(self, other):\n        return self.x - other.x\n\nm1 = M(5)\nm2 = M(3)\nn = 2\nprint(m1 - m2)\nprint(m1 - n)\nprint(n - m1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': ""What is the output of the following code?\n```python\nimport os\n\nprint(os.path.abspath('.'))\nprint(os.path.abspath('..'))\n```\n"", 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': ""What is the output of the following code?\n```python\nwith open('file.txt') as f:\n    print(f.read())\n```\n"", 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass L:\n    def __init__(self, x):\n        self.x = x\n\n    def __radd__(self, other):\n        return self.x + other.x\n\nl = L(2)\nm = 3\nprint(l + m)\nprint(m + l)\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass V:\n    def __init__(self, x):\n        self.x = x\n\n    def __lshift__(self, other):\n        return self.x << other.x\n\nv1 = V(5)\nv2 = V(3)\nv3 = 2\nprint(v1 << v2)\nprint(v1 << v3)\nprint(v3 << v1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 is not 50.0)?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the purpose of the `functools.lru_cache()` decorator in Python?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of print(50 % -2)?\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass G:\n    def __init__(self, x):\n        self.x = x\n\n    def __len__(self):\n        return len(self.x)\n\ng = G([1, 2, 3])\nprint(len(g))\n```', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass C:\n    def __init__(self):\n        self.x = 1\n\n    def __call__(self):\n        return self.x * 2\n\nc = C()\nprint(c())\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass U:\n    def __init__(self, x):\n        self.x = x\n\n    def __xor__(self, other):\n        return self.x ^ other.x\n\nu1 = U(5)\nu2 = U(3)\nu3 = 2\nprint(u1 ^ u2)\nprint(u1 ^ u3)\nprint(u3 ^ u1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nclass E:\n    def __init__(self, x):\n        self.x = x\n\n    def __iter__(self):\n        self.current = 0\n        return self\n\n    def __next__(self):\n        if self.current < self.x:\n            result = self.current\n            self.current += 1\n            return result\n        else:\n            raise StopIteration\n\ne = E(5)\nfor i in e:\n    print(i)\n```\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of print(50 // -3)?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of print(""Hello"" not in ""Hello World"")?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass P:\n    def __init__(self, x):\n        self.x = x\n\n    def __floordiv__(self, other):\n        return self.x // other.x\n\np1 = P(5)\np2 = P(2)\np3 = 3\nprint(p1 // p2)\nprint(p1 // p3)\nprint(p3 // p1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of the following code?\n```python\nimport functools\n\n@functools.lru_cache()\ndef f(x):\n    return x * x\n\nprint(f(1))\nprint(f(2))\nprint(f.cache_info())\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': ""What is the output of the following code?\n```python\nclass A:\n    __slots__ = ('x',)\n\na = A()\na.x = 1\nprint(a.x)\n```\n"", 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass S:\n    def __init__(self, x):\n        self.x = x\n\n    def __and__(self, other):\n        return self.x & other.x\n\ns1 = S(5)\ns2 = S(3)\ns3 = 2\nprint(s1 & s2)\nprint(s1 & s3)\nprint(s3 & s1)\n```\n', 'correct': False, 'wrong': True, 'unanswered': False, 'marks': 0}, {'question': 'What is the output of print(50 >= 50.0)?\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}, {'question': 'What is the output of the following code?\n```python\nclass D:\n    def __init__(self, x):\n        self.x = x\n\n    def __eq__(self, other):\n        return self.x == other.x\n\nd1 = D(1)\nd2 = D(2)\nd3 = D(1)\nprint(d1 == d3)\nprint(d2 == d3)\n', 'correct': True, 'wrong': False, 'unanswered': False, 'marks': 1}]"
